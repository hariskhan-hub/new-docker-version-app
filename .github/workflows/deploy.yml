name: Deploy Fullstack App to ECS

on:
  push:
    branches: [main]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build and Push Frontend Docker Image
        run: |
          FRONTEND_IMAGE=${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/${{ secrets.FRONTEND_REPO }}:latest
          docker build -t $FRONTEND_IMAGE ./frontend
          docker push $FRONTEND_IMAGE

      - name: Build and Push Backend Docker Image
        run: |
          BACKEND_IMAGE=${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/${{ secrets.BACKEND_REPO }}:latest
          docker build -t $BACKEND_IMAGE ./backend
          docker push $BACKEND_IMAGE

      - name: Update ECS Services (Frontend and Backend)
        run: |
          # Update Frontend ECS Service
          aws ecs update-service \
            --cluster "${{ secrets.ECS_CLUSTER }}" \
            --service "frontend33-task-service-nbnp1cha" \
            --force-new-deployment \
            --region "${{ secrets.AWS_REGION }}"

          # Update Backend ECS Service
          aws ecs update-service \
            --cluster "${{ secrets.ECS_CLUSTER }}" \
            --service "backend33-task-service-qb2vy0f9" \
            --force-new-deployment \
            --region "${{ secrets.AWS_REGION }}"

